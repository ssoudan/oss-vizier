name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
      - uses: conda-incubator/setup-miniconda@v2
        with:
          # Specify python version your environment will have. Remember to quote this, or
          # YAML will think you want python 3.1 not 3.10
          python-version: "3.10"
          # This uses *miniforge*, rather than *minicond*. The primary difference is that
          # the defaults channel is not enabled at all
          miniforge-version: latest
      - uses: actions/checkout@v3
      - name: Create env
        shell: bash -el {0}
        run: conda env create -f environment.yml
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        shell: bash -el {0}
        run: |
          conda activate oss-vizier
          python run_server.py &
          cargo test --verbose

  clippy_check:
    runs-on: ubuntu-latest
    steps:
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
      - uses: actions/checkout@v1
      - run: rustup component add clippy
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: -- -D warnings

  cargo-deny:
    runs-on: ubuntu-latest
    steps:
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
      - uses: actions/checkout@v2
      - uses: EmbarkStudios/cargo-deny-action@v1

  docs:
    name: Docs
    runs-on: ubuntu-latest
    steps:
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
      - uses: actions/checkout@v2
      - name: Install Rust
        run: rustup update stable
      - name: cargo doc
        run: cargo doc --no-deps